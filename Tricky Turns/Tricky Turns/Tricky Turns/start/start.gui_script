local data = require('main.data')

local function animate_in(self)
	gui.animate(self.title, 'position', vmath.vector3(gui.get_position(self.title).x, data.mid_y, 0), gui.EASING_OUTELASTIC, 0.9, 0.2, function()
		gui.animate(self.play_button, 'scale', vmath.vector3(1, 1, 0), gui.EASING_LINEAR, 0.2, 0, function()
			msg.post('.', 'acquire_input_focus')
		end)
	end)
end

local function animate_out(self)
	gui.animate(self.play_button, 'scale', vmath.vector3(0, 0, 0), gui.EASING_LINEAR, 0.15, 0, function()
		gui.animate(self.container, 'position.y', data.max_y, gui.EASING_LINEAR, 0.3, 0, function()
			msg.post('main:/handler', 'show_game')
		end)
	end)
end

function init(self)
	data.state = data.STATE_START
	self.container = gui.get_node('container')
	self.title = gui.get_node('title')
	self.play_button = gui.get_node('play_button')

	gui.set_color(gui.get_node('word_1'), data.color_one)
	gui.set_color(gui.get_node('word_2'), data.color_two)
	gui.set_color(self.play_button, data.color_one)

	local title_position = gui.get_position(self.title)
	title_position.y = data.max_y + (gui.get_size(self.title).y / 2)
	gui.set_position(self.title, title_position)
	local button_position = gui.get_position(self.play_button)
	button_position.y = data.min_y + (data.screen_height / 4)
	gui.set_position(self.play_button, button_position)

	if data.system_name == 'Android' and not sys.get_engine_info().is_debug then
		local is_verified = apk_verifier.is_installed_from_market() and apk_verifier.get_package_name() == sys.get_config('android.package')
		print('apk is verified: ', is_verified)
		if is_verified then
			animate_in(self)
		else
			msg.post('popup#gui', 'show_popup')
		end
	else
		animate_in(self)
	end
end

local function animate_button(self)
	local color = gui.get_color(self.pressed_button)
	color.w = (color.w < 1) and 1 or 0.6
	gui.set_color(self.pressed_button, color)
end

function on_input(self, action_id, action)
	if action_id == hash('touch') then
		if action.pressed then
			if gui.pick_node(self.play_button, action.x, action.y) then
				self.pressed_button = self.play_button
				animate_button(self)
			end
		elseif action.released and self.pressed_button then
			animate_button(self)
			if gui.pick_node(self.pressed_button, action.x, action.y) then
				msg.post('main:/sound#button', 'play_sound')
				msg.post('.', 'release_input_focus')
				animate_out(self)
			end
			self.pressed_button = nil
		end
	end
end