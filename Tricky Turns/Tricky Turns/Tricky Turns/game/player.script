local data = require('main.data')

function init(self)
	self.speed = 1.8
	self.direction = math.random(1,2)
end

local function end_game(self)
	self.can_move_player = false
	msg.post('.', 'release_input_focus')
	go.cancel_animations('.', 'euler.z')
	msg.post('circle1', 'disable')
	msg.post('circle2', 'disable')
	local function emitter_state_change(self, id, emitter, state)
		if state == particlefx.EMITTER_STATE_SLEEPING then
			msg.post('container#script', 'end_game')
		end
	end
	particlefx.play('circle1#explode', emitter_state_change)
	particlefx.play('circle2#explode')
	msg.post('main:/sound#explode', 'play_sound')
end

local function move(self)
	go.cancel_animations('.', 'euler.z')
	self.direction = (self.direction == 1) and -1 or 1
	local rotation = go.get('.', 'euler.z') + (360 * self.direction)
	go.animate('.', 'euler.z', go.PLAYBACK_LOOP_FORWARD, rotation, go.EASING_LINEAR, self.speed)
end

local function increase_difficulty(self)
	if self.speed > 1.5 then
		self.speed = self.speed + 0.006
	elseif self.speed > 1.2 then
		self.speed = self.speed + 0.0015
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash('start') then
		msg.post('.', 'acquire_input_focus')
		self.can_move_player = true
		move(self)
	elseif message_id == hash('collision') then
		if not self.collided then
			self.collided = true
			end_game(self)
		end
	elseif message_id == hash('continue') then
		local scale = go.get_scale('circle1').x
		go.set('circle1', 'scale', 0)
		go.set('circle2', 'scale', 0)
		msg.post('circle1', 'enable')
		msg.post('circle2', 'enable')
		go.animate('circle1', 'scale', go.PLAYBACK_ONCE_FORWARD, scale, go.EASING_LINEAR, 0.2)
		go.animate('circle2', 'scale', go.PLAYBACK_ONCE_FORWARD, scale, go.EASING_LINEAR, 0.2)
		msg.post('.', 'acquire_input_focus')
		self.can_move_player = true
		self.collided = false
		move(self)
	elseif message_id == hash('increase_difficulty') then
		increase_difficulty(self)
	end
end

function on_input(self, action_id, action)
	if action_id == hash('touch') and action.pressed and self.can_move_player then
		move(self)
		msg.post('main:/sound#move', 'play_sound')
	end
end
